let slice = def>(start, end): this[Range(start, end, end<0)]
List::slice = slice
Tuple::slice = slice
Deque::slice = slice

let splice = def>(start, end, items...): this[Range(start, end, end<0)] = items
List::splice = splice
Deque::splice = splice

let rotated = def>n: List(this).rotate(n)
List::rotated = rotated
Deque::rotated = rotated
