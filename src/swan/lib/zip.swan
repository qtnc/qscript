global function zip (...seqs){
let zipper 
if seqs.length==0: return ()
else if !(seqs[-1] is Iterable) {
zipper = seqs[-1]
seqs = seqs[0..-1]
}
else zipper = $(...x): x
return $*{
var iterators = [], keys = [], values = []
for seq in seqs { iterators.push(seq.iterator); keys.push(null); values.push(null); }
while true {
for i in 0..iterators.length {
keys[i] = iterators[i].iterate(keys[i])
if keys[i]==null {
return null
}
values[i] = iterators[i].iteratorValue(keys[i])
}
let re = zipper(...values)
yield re
}
}
}
